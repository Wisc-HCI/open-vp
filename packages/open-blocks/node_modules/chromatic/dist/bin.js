#!/usr/bin/env node
'use strict';

var chunkJNAVCRWQ_js = require('./chunk-JNAVCRWQ.js');
var chunkORGADLRC_js = require('./chunk-ORGADLRC.js');

var O=chunkORGADLRC_js.c((oe,m)=>{var W=chunkORGADLRC_js.a("fs"),P=chunkORGADLRC_js.a("path");function k(e){console.log(`[dotenv][DEBUG] ${e}`);}var M=`
`,U=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,Y=/\\n/g,G=/\n|\r|\r\n/;function E(e,t){let c=!!(t&&t.debug),i={};return e.toString().split(G).forEach(function(r,s){let a=r.match(U);if(a!=null){let l=a[1],o=a[2]||"",n=o.length-1,g=o[0]==='"'&&o[n]==='"';o[0]==="'"&&o[n]==="'"||g?(o=o.substring(1,n),g&&(o=o.replace(Y,M))):o=o.trim(),i[l]=o;}else c&&k(`did not match key and value when parsing line ${s+1}: ${r}`);}),i}function Q(e){let t=P.resolve(process.cwd(),".env"),c="utf8",i=!1;e&&(e.path!=null&&(t=e.path),e.encoding!=null&&(c=e.encoding),e.debug!=null&&(i=!0));try{let r=E(W.readFileSync(t,{encoding:c}),{debug:i});return Object.keys(r).forEach(function(s){Object.prototype.hasOwnProperty.call(process.env,s)?i&&k(`"${s}" is already defined in \`process.env\` and will not be overwritten`):process.env[s]=r[s];}),{parsed:r}}catch(r){return {error:r}}}m.exports.config=Q;m.exports.parse=E;});var _={};chunkORGADLRC_js.d(_,{main:()=>V});async function V(e){let{code:t}=await chunkJNAVCRWQ_js.i({argv:e});process.exit(t);}var D=chunkORGADLRC_js.b(()=>{chunkJNAVCRWQ_js.k();});var B={};chunkORGADLRC_js.d(B,{main:()=>X});async function X(e){let{flags:t,input:c}=(0, F.default)(`
    Usage
      $ chromatic trace [-b|--base-dir] [-c|--config-dir] [-s|--stats-file] [-u|--untraced] [-m|--mode] [<changed files>...]

    Options
      <changed files>...                    List of changed files relative to repository root.
      --stats-file, -s <filepath>           Path to preview-stats.json. Alternatively, set WEBPACK_STATS_FILE. (default: 'storybook-static/preview-stats.json')
      --storybook-base-dir, -b <dirname>    Relative path from repository root to Storybook project root. Alternatively, set STORYBOOK_BASE_DIR. Use when your Storybook is located in a subdirectory of your repository.
      --storybook-config-dir, -c <dirname>  Directory where to load Storybook configurations from. Alternatively, set STORYBOOK_CONFIG_DIR. (default: '.storybook')
      --untraced, -u <filepath>             Disregard these files and their dependencies. Globs are supported via picomatch. This flag can be specified multiple times.
      --mode, -m <mode>                     Set to 'expanded' to reveal the underlying list of files for each bundle, or set to 'compact' to only show a flat list of affected story files.
    `,{argv:e,description:"Trace utility for TurboSnap",flags:{statsFile:{type:"string",alias:"s",default:z||"storybook-static/preview-stats.json"},storybookBaseDir:{type:"string",alias:"b",default:H||"."},storybookConfigDir:{type:"string",alias:"c",default:J||".storybook"},untraced:{type:"string",alias:"u",isMultiple:!0},mode:{type:"string",alias:"m"}}}),i={log:console,options:{storybookBaseDir:t.storybookBaseDir,storybookConfigDir:t.storybookConfigDir,untraced:t.untraced,traceChanged:t.mode||!0}},r=await chunkJNAVCRWQ_js.g(t.statsFile),s=c.map(l=>l.replace(/^\.\//,"")),a=s.find(l=>chunkJNAVCRWQ_js.b(l));if(a)throw new Error(`Unable to trace package manifest file (${a}) as that would require diffing file contents.`);await chunkJNAVCRWQ_js.e(i,r,t.statsFile,s);}var F,H,J,z,T=chunkORGADLRC_js.b(()=>{F=chunkORGADLRC_js.e(chunkJNAVCRWQ_js.a());chunkJNAVCRWQ_js.f();chunkJNAVCRWQ_js.h();chunkJNAVCRWQ_js.c();({STORYBOOK_BASE_DIR:H,STORYBOOK_CONFIG_DIR:J,WEBPACK_STATS_FILE:z}=process.env);});var C={};chunkORGADLRC_js.d(C,{main:()=>ee});async function ee([e="./storybook-static/preview-stats.json"]){try{let c=(await chunkJNAVCRWQ_js.g(e)).modules.filter(A).map(({id:r,name:s,modules:a,reasons:l})=>{let o=Z(l.filter(A).map(n=>n.moduleName)).filter(n=>n!==s).map(n=>({moduleName:n}));return {id:r,name:s,modules:a&&a.map(n=>({name:n.name})),reasons:o}}).filter(Boolean),i=e.replace(".json",".trimmed.json");await(0,I.outputFile)(i,JSON.stringify({modules:c},null,2).replace(/{\n {10}/g,"{ ").replace(/\n {8}}/g," }")),console.log(`Wrote ${i}`);}catch(t){console.error(t);}}var I,Z,A,R=chunkORGADLRC_js.b(()=>{I=chunkORGADLRC_js.e(chunkJNAVCRWQ_js.d());chunkJNAVCRWQ_js.h();Z=e=>Array.from(new Set(e)),A=({name:e,moduleName:t=e})=>t&&!t.startsWith("(webpack)")&&!t.match(/(node_modules|webpack\/runtime)\//);});O().config();var j={main:()=>(D(),chunkORGADLRC_js.f(_)).main(process.argv.slice(2)),trace:()=>(T(),chunkORGADLRC_js.f(B)).main(process.argv.slice(3)),"trim-stats-file":()=>(R(),chunkORGADLRC_js.f(C)).main(process.argv.slice(3))};(j[process.argv[2]]||j.main)();
