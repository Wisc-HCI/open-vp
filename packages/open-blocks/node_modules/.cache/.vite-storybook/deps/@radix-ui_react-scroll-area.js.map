{
  "version": 3,
  "sources": ["../../../@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../../@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../../@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../../@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../../@radix-ui/react-primitive/dist/packages/react/primitive/src/index.ts", "../../../@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../../@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/index.ts", "../../../@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx", "../../../@radix-ui/react-presence/dist/packages/react/presence/src/index.ts", "../../../@radix-ui/react-presence/dist/packages/react/presence/src/Presence.tsx", "../../../@radix-ui/react-presence/dist/packages/react/presence/src/useStateMachine.tsx", "../../../@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../../@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../../@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/index.ts", "../../../@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx", "../../../@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../../@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx", "../../../@radix-ui/number/dist/packages/core/number/src/index.ts", "../../../@radix-ui/number/dist/packages/core/number/src/number.ts", "../../../@radix-ui/primitive/dist/packages/core/primitive/src/index.ts", "../../../@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx", "../../../@radix-ui/react-scroll-area/dist/packages/react/scroll-area/src/index.ts", "../../../@radix-ui/react-scroll-area/dist/packages/react/scroll-area/src/ScrollArea.tsx", "../../../@radix-ui/react-scroll-area/dist/packages/react/scroll-area/src/useStateMachine.ts"],
  "sourcesContent": ["export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: forwardedRef ? composeRefs(forwardedRef, (children as any).ref) : (children as any).ref,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { Presence } from './Presence';\nexport type { PresenceProps } from './Presence';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "export { clamp } from './number';\n", "function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n", "export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n} from './ScrollArea';\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n} from './ScrollArea';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useStateMachine } from './useStateMachine';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Sizes = {\n  content: number;\n  viewport: number;\n  scrollbar: {\n    size: number;\n    paddingStart: number;\n    paddingEnd: number;\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_AREA_NAME = 'ScrollArea';\n\ntype ScopedProps<P> = P & { __scopeScrollArea?: Scope };\nconst [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\n\ntype ScrollAreaContextValue = {\n  type: 'auto' | 'always' | 'scroll' | 'hover';\n  dir: Direction;\n  scrollHideDelay: number;\n  scrollArea: ScrollAreaElement | null;\n  viewport: ScrollAreaViewportElement | null;\n  onViewportChange(viewport: ScrollAreaViewportElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: ScrollAreaScrollbarElement | null;\n  onScrollbarXChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: ScrollAreaScrollbarElement | null;\n  onScrollbarYChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n};\n\nconst [ScrollAreaProvider, useScrollAreaContext] =\n  createScrollAreaContext<ScrollAreaContextValue>(SCROLL_AREA_NAME);\n\ntype ScrollAreaElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ScrollAreaProps extends PrimitiveDivProps {\n  type?: ScrollAreaContextValue['type'];\n  dir?: ScrollAreaContextValue['dir'];\n  scrollHideDelay?: number;\n}\n\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>(\n  (props: ScopedProps<ScrollAreaProps>, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = 'hover',\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React.useState<ScrollAreaElement | null>(null);\n    const [viewport, setViewport] = React.useState<ScrollAreaViewportElement | null>(null);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [scrollbarY, setScrollbarY] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [cornerWidth, setCornerWidth] = React.useState(0);\n    const [cornerHeight, setCornerHeight] = React.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n\n    return (\n      <ScrollAreaProvider\n        scope={__scopeScrollArea}\n        type={type}\n        dir={direction}\n        scrollHideDelay={scrollHideDelay}\n        scrollArea={scrollArea}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        content={content}\n        onContentChange={setContent}\n        scrollbarX={scrollbarX}\n        onScrollbarXChange={setScrollbarX}\n        scrollbarXEnabled={scrollbarXEnabled}\n        onScrollbarXEnabledChange={setScrollbarXEnabled}\n        scrollbarY={scrollbarY}\n        onScrollbarYChange={setScrollbarY}\n        scrollbarYEnabled={scrollbarYEnabled}\n        onScrollbarYEnabledChange={setScrollbarYEnabled}\n        onCornerWidthChange={setCornerWidth}\n        onCornerHeightChange={setCornerHeight}\n      >\n        <Primitive.div\n          dir={direction}\n          {...scrollAreaProps}\n          ref={composedRefs}\n          style={{\n            position: 'relative',\n            // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n            ['--radix-scroll-area-corner-width' as any]: cornerWidth + 'px',\n            ['--radix-scroll-area-corner-height' as any]: cornerHeight + 'px',\n            ...props.style,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  }\n);\n\nScrollArea.displayName = SCROLL_AREA_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ScrollAreaViewport';\n\ntype ScrollAreaViewportElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaViewportProps extends PrimitiveDivProps {}\n\nconst ScrollAreaViewport = React.forwardRef<ScrollAreaViewportElement, ScrollAreaViewportProps>(\n  (props: ScopedProps<ScrollAreaViewportProps>, forwardedRef) => {\n    const { __scopeScrollArea, children, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React.useRef<ScrollAreaViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Primitive.div\n          data-radix-scroll-area-viewport=\"\"\n          {...viewportProps}\n          ref={composedRefs}\n          style={{\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n            overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n            ...props.style,\n          }}\n        >\n          {/**\n           * `display: table` ensures our content div will match the size of its children in both\n           * horizontal and vertical axis so we can determine if scroll width/height changed and\n           * recalculate thumb sizes. This doesn't account for children with *percentage*\n           * widths that change. We'll wait to see what use-cases consumers come up with there\n           * before trying to resolve it.\n           */}\n          <div ref={context.onContentChange} style={{ minWidth: '100%', display: 'table' }}>\n            {children}\n          </div>\n        </Primitive.div>\n      </>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLLBAR_NAME = 'ScrollAreaScrollbar';\n\ntype ScrollAreaScrollbarElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbar = React.forwardRef<ScrollAreaScrollbarElement, ScrollAreaScrollbarProps>(\n  (props: ScopedProps<ScrollAreaScrollbarProps>, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarHoverElement = ScrollAreaScrollbarAutoElement;\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarHover = React.forwardRef<\n  ScrollAreaScrollbarHoverElement,\n  ScrollAreaScrollbarHoverProps\n>((props: ScopedProps<ScrollAreaScrollbarHoverProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarAuto\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarScrollElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarScrollProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarScroll = React.forwardRef<\n  ScrollAreaScrollbarScrollElement,\n  ScrollAreaScrollbarScrollProps\n>((props: ScopedProps<ScrollAreaScrollbarScrollProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = useStateMachine('hidden', {\n    hidden: {\n      SCROLL: 'scrolling',\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting',\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle',\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting',\n    },\n  });\n\n  React.useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n\n  React.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n\n  return (\n    <Presence present={forceMount || state !== 'hidden'}>\n      <ScrollAreaScrollbarVisible\n        data-state={state === 'hidden' ? 'hidden' : 'visible'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER'))}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarAutoElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarAutoProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarAuto = React.forwardRef<\n  ScrollAreaScrollbarAutoElement,\n  ScrollAreaScrollbarAutoProps\n>((props: ScopedProps<ScrollAreaScrollbarAutoProps>, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React.useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarVisibleElement = ScrollAreaScrollbarAxisElement;\ninterface ScrollAreaScrollbarVisibleProps\n  extends Omit<ScrollAreaScrollbarAxisProps, keyof ScrollAreaScrollbarAxisPrivateProps> {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst ScrollAreaScrollbarVisible = React.forwardRef<\n  ScrollAreaScrollbarVisibleElement,\n  ScrollAreaScrollbarVisibleProps\n>((props: ScopedProps<ScrollAreaScrollbarVisibleProps>, forwardedRef) => {\n  const { orientation = 'vertical', ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React.useRef<ScrollAreaThumbElement | null>(null);\n  const pointerOffsetRef = React.useRef(0);\n  const [sizes, setSizes] = React.useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  type UncommonProps = 'onThumbPositionChange' | 'onDragScroll' | 'onWheelScroll';\n  const commonProps: Omit<ScrollAreaScrollbarAxisPrivateProps, UncommonProps> = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => (thumbRef.current = thumb),\n    onThumbPointerUp: () => (pointerOffsetRef.current = 0),\n    onThumbPointerDown: (pointerPos) => (pointerOffsetRef.current = pointerPos),\n  };\n\n  function getScrollPosition(pointerPos: number, dir?: Direction) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n\n  if (orientation === 'horizontal') {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === 'vertical') {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarAxisPrivateProps = {\n  hasThumb: boolean;\n  sizes: Sizes;\n  onSizesChange(sizes: Sizes): void;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerDown(pointerPos: number): void;\n  onThumbPointerUp(): void;\n  onThumbPositionChange(): void;\n  onWheelScroll(scrollPos: number): void;\n  onDragScroll(pointerPos: number): void;\n};\n\ntype ScrollAreaScrollbarAxisElement = ScrollAreaScrollbarImplElement;\ninterface ScrollAreaScrollbarAxisProps\n  extends Omit<ScrollAreaScrollbarImplProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarAxisPrivateProps {}\n\nconst ScrollAreaScrollbarX = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"horizontal\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        bottom: 0,\n        left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        ['--radix-scroll-area-thumb-width' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\nconst ScrollAreaScrollbarY = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"vertical\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        top: 0,\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 'var(--radix-scroll-area-corner-height)',\n        ['--radix-scroll-area-thumb-height' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollbarContext = {\n  hasThumb: boolean;\n  scrollbar: ScrollAreaScrollbarElement | null;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerUp(): void;\n  onThumbPointerDown(pointerPos: { x: number; y: number }): void;\n  onThumbPositionChange(): void;\n};\n\nconst [ScrollbarProvider, useScrollbarContext] =\n  createScrollAreaContext<ScrollbarContext>(SCROLLBAR_NAME);\n\ntype ScrollAreaScrollbarImplElement = React.ElementRef<typeof Primitive.div>;\ntype ScrollAreaScrollbarImplPrivateProps = {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContext['onThumbChange'];\n  onThumbPointerUp: ScrollbarContext['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContext['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContext['onThumbPositionChange'];\n  onWheelScroll(event: WheelEvent, maxScrollPos: number): void;\n  onDragScroll(pointerPos: { x: number; y: number }): void;\n  onResize(): void;\n};\ninterface ScrollAreaScrollbarImplProps\n  extends PrimitiveDivProps,\n    ScrollAreaScrollbarImplPrivateProps {}\n\nconst ScrollAreaScrollbarImpl = React.forwardRef<\n  ScrollAreaScrollbarImplElement,\n  ScrollAreaScrollbarImplProps\n>((props: ScopedProps<ScrollAreaScrollbarImplProps>, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React.useState<ScrollAreaScrollbarElement | null>(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<ClientRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  function handleDragScroll(event: React.PointerEvent<HTMLElement>) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n\n  /**\n   * We bind wheel event imperatively so we can switch off passive\n   * mode for document wheel event to allow it to be prevented\n   */\n  React.useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  /**\n   * Update thumb position on sizes change\n   */\n  React.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      scope={__scopeScrollArea}\n      scrollbar={scrollbar}\n      hasThumb={hasThumb}\n      onThumbChange={useCallbackRef(onThumbChange)}\n      onThumbPointerUp={useCallbackRef(onThumbPointerUp)}\n      onThumbPositionChange={handleThumbPositionChange}\n      onThumbPointerDown={useCallbackRef(onThumbPointerDown)}\n    >\n      <Primitive.div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            // pointer capture doesn't prevent text selection in Safari\n            // so we remove text selection manually when scrolling\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          if (element.hasPointerCapture(event.pointerId)) {\n            element.releasePointerCapture(event.pointerId);\n          }\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'ScrollAreaThumb';\n\ntype ScrollAreaThumbElement = ScrollAreaThumbImplElement;\ninterface ScrollAreaThumbProps extends ScrollAreaThumbImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ScrollAreaThumb = React.forwardRef<ScrollAreaThumbElement, ScrollAreaThumbProps>(\n  (props: ScopedProps<ScrollAreaThumbProps>, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return (\n      <Presence present={forceMount || scrollbarContext.hasThumb}>\n        <ScrollAreaThumbImpl ref={forwardedRef} {...thumbProps} />\n      </Presence>\n    );\n  }\n);\n\ntype ScrollAreaThumbImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaThumbImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaThumbImpl = React.forwardRef<ScrollAreaThumbImplElement, ScrollAreaThumbImplProps>(\n  (props: ScopedProps<ScrollAreaThumbImplProps>, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React.useRef<() => void>();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    React.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        /**\n         * We only bind to native scroll event so we know when scroll starts and ends.\n         * When scroll starts we start a requestAnimationFrame loop that checks for\n         * changes to scroll position. That rAF loop triggers our thumb position change\n         * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n         * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n         */\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener('scroll', handleScroll);\n        return () => viewport.removeEventListener('scroll', handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return (\n      <Primitive.div\n        data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n        {...thumbProps}\n        ref={composedRef}\n        style={{\n          width: 'var(--radix-scroll-area-thumb-width)',\n          height: 'var(--radix-scroll-area-thumb-height)',\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target as HTMLElement;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n      />\n    );\n  }\n);\n\nScrollAreaThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\n\nconst CORNER_NAME = 'ScrollAreaCorner';\n\ntype ScrollAreaCornerElement = ScrollAreaCornerImplElement;\ninterface ScrollAreaCornerProps extends ScrollAreaCornerImplProps {}\n\nconst ScrollAreaCorner = React.forwardRef<ScrollAreaCornerElement, ScrollAreaCornerProps>(\n  (props: ScopedProps<ScrollAreaCornerProps>, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n    return hasCorner ? <ScrollAreaCornerImpl {...props} ref={forwardedRef} /> : null;\n  }\n);\n\nScrollAreaCorner.displayName = CORNER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaCornerImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaCornerImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaCornerImpl = React.forwardRef<\n  ScrollAreaCornerImplElement,\n  ScrollAreaCornerImplProps\n>((props: ScopedProps<ScrollAreaCornerImplProps>, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const hasSize = Boolean(width && height);\n\n  useResizeObserver(context.scrollbarX, () => {\n    const height = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n\n  useResizeObserver(context.scrollbarY, () => {\n    const width = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n\n  return hasSize ? (\n    <Primitive.div\n      {...cornerProps}\n      ref={forwardedRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 0,\n        ...props.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n\nfunction getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\n\nfunction getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\n\nfunction getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n\nfunction getThumbOffsetFromScroll(scrollPos: number, sizes: Sizes, dir: Direction = 'ltr') {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst addUnlinkedScrollListener = (node: HTMLElement, handler = () => {}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\n\nfunction useDebounceCallback(callback: () => void, delay: number) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React.useRef(0);\n  React.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ScrollArea;\nconst Viewport = ScrollAreaViewport;\nconst Scrollbar = ScrollAreaScrollbar;\nconst Thumb = ScrollAreaThumb;\nconst Corner = ScrollAreaCorner;\n\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n};\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n};\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"],
  "mappings": "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",
  "names": ["setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "NODES", "Primitive", "reduce", "primitive", "node", "Node", "React", "props", "forwardedRef", "primitiveProps", "Comp", "asChild", "Slot", "window", "Symbol", "for", "$4q5Fq$createElement", "displayName", "useLayoutEffect", "Boolean", "globalThis", "document", "React", "useStateMachine", "initialState", "machine", "React", "state", "event", "nextState", "Presence", "props", "children", "presence", "usePresence", "present", "child", "isPresent", "only", "ref", "useComposedRefs", "forceMount", "displayName", "node", "setNode", "stylesRef", "prevPresentRef", "prevAnimationNameRef", "send", "mounted", "UNMOUNT", "ANIMATION_OUT", "unmountSuspended", "MOUNT", "ANIMATION_END", "unmounted", "currentAnimationName", "getAnimationName", "current", "useLayoutEffect", "styles", "wasPresent", "hasPresentChanged", "prevAnimationName", "display", "isAnimating", "handleAnimationEnd", "isCurrentAnimation", "includes", "animationName", "target", "ReactDOM", "handleAnimationStart", "addEventListener", "removeEventListener", "getComputedStyle", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "useCallbackRef", "callback", "callbackRef", "React", "current", "args", "DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext", "clamp", "value", "min", "max", "Math", "composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "handleEvent", "event", "defaultPrevented", "useStateMachine", "initialState", "machine", "React", "state", "event", "nextState", "SCROLL_AREA_NAME", "createScrollAreaContext", "createScrollAreaScope", "createContextScope", "ScrollAreaProvider", "useScrollAreaContext", "ScrollArea", "props", "forwardedRef", "scrollAreaProps", "scrollArea", "setScrollArea", "viewport", "setViewport", "content", "setContent", "scrollbarX", "setScrollbarX", "scrollbarY", "setScrollbarY", "cornerWidth", "setCornerWidth", "cornerHeight", "setCornerHeight", "scrollbarXEnabled", "setScrollbarXEnabled", "scrollbarYEnabled", "setScrollbarYEnabled", "composedRefs", "useComposedRefs", "node", "direction", "useDirection", "dir", "$fnFM9$createElement", "__scopeScrollArea", "position", "style", "VIEWPORT_NAME", "ScrollAreaViewport", "viewportProps", "context", "ref", "onViewportChange", "$fnFM9$Fragment", "__html", "overflowX", "overflowY", "onContentChange", "minWidth", "display", "children", "SCROLLBAR_NAME", "ScrollAreaScrollbar", "scrollbarProps", "onScrollbarYEnabledChange", "isHorizontal", "orientation", "onScrollbarXEnabledChange", "type", "ScrollAreaScrollbarHover", "visible", "setVisible", "hideTimer", "handlePointerEnter", "window", "clearTimeout", "handlePointerLeave", "setTimeout", "scrollHideDelay", "addEventListener", "removeEventListener", "forceMount", "ScrollAreaScrollbarScroll", "debounceScrollEnd", "useDebounceCallback", "send", "hidden", "SCROLL", "scrolling", "SCROLL_END", "POINTER_ENTER", "interacting", "POINTER_LEAVE", "idle", "HIDE", "scrollDirection", "prevScrollPos", "handleScroll", "scrollPos", "hasScrollInDirectionChanged", "composeEventHandlers", "onPointerEnter", "onPointerLeave", "ScrollAreaScrollbarAuto", "handleResize", "isOverflowX", "offsetWidth", "scrollWidth", "isOverflowY", "offsetHeight", "scrollHeight", "useResizeObserver", "ScrollAreaScrollbarVisible", "thumbRef", "pointerOffsetRef", "sizes", "setSizes", "scrollbar", "size", "paddingStart", "paddingEnd", "thumbRatio", "getThumbRatio", "commonProps", "onSizesChange", "hasThumb", "Boolean", "onThumbChange", "thumb", "current", "onThumbPointerUp", "onThumbPointerDown", "pointerPos", "getScrollPosition", "getScrollPositionFromPointer", "scrollLeft", "offset", "getThumbOffsetFromScroll", "transform", "scrollTop", "ScrollAreaScrollbarX", "computedStyle", "setComputedStyle", "composeRefs", "onScrollbarXChange", "getComputedStyle", "bottom", "left", "right", "getThumbSize", "x", "onDragScroll", "maxScrollPos", "deltaX", "onWheelScroll", "isScrollingWithinScrollbarBounds", "preventDefault", "clientWidth", "toInt", "paddingLeft", "paddingRight", "ScrollAreaScrollbarY", "onScrollbarYChange", "top", "undefined", "y", "deltaY", "clientHeight", "paddingTop", "paddingBottom", "ScrollbarProvider", "useScrollbarContext", "ScrollAreaScrollbarImpl", "setScrollbar", "rectRef", "prevWebkitUserSelectRef", "handleWheelScroll", "useCallbackRef", "handleThumbPositionChange", "onThumbPositionChange", "onResize", "handleDragScroll", "clientX", "clientY", "handleWheel", "element", "target", "isScrollbarWheel", "contains", "document", "passive", "onPointerDown", "mainPointer", "button", "setPointerCapture", "pointerId", "getBoundingClientRect", "body", "webkitUserSelect", "onPointerMove", "onPointerUp", "hasPointerCapture", "releasePointerCapture", "THUMB_NAME", "ScrollAreaThumb", "thumbProps", "scrollbarContext", "ScrollAreaThumbImpl", "scrollAreaContext", "composedRef", "removeUnlinkedScrollListenerRef", "listener", "addUnlinkedScrollListener", "width", "height", "onPointerDownCapture", "thumbRect", "CORNER_NAME", "ScrollAreaCorner", "hasBothScrollbarsVisible", "hasCorner", "ScrollAreaCornerImpl", "cornerProps", "setWidth", "setHeight", "hasSize", "onCornerHeightChange", "onCornerWidthChange", "value", "parseInt", "viewportSize", "contentSize", "ratio", "isNaN", "scrollbarPadding", "thumbSize", "Math", "max", "pointerOffset", "thumbSizePx", "thumbCenter", "thumbOffsetFromEnd", "minPointerPos", "maxPointerPos", "scrollRange", "interpolate", "linearScale", "maxThumbPos", "scrollClampRange", "scrollWithoutMomentum", "clamp", "input", "output", "handler", "prevPosition", "rAF", "loop", "isHorizontalScroll", "isVerticalScroll", "requestAnimationFrame", "cancelAnimationFrame", "callback", "delay", "handleCallback", "debounceTimerRef", "useLayoutEffect", "resizeObserver", "ResizeObserver", "observe", "unobserve", "Root", "Viewport", "Scrollbar", "Thumb", "Corner"]
}
