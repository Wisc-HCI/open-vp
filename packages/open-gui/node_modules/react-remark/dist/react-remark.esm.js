import { useState, useCallback, createElement, Fragment, useEffect } from 'react';
import unified from 'unified';
import remarkParse from 'remark-parse';
import remarkToRehype from 'remark-rehype';
import rehypeReact from 'rehype-react';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["children"];
var useRemarkSync = function useRemarkSync(source, _temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      remarkParseOptions = _ref.remarkParseOptions,
      remarkToRehypeOptions = _ref.remarkToRehypeOptions,
      rehypeReactOptions = _ref.rehypeReactOptions,
      _ref$remarkPlugins = _ref.remarkPlugins,
      remarkPlugins = _ref$remarkPlugins === void 0 ? [] : _ref$remarkPlugins,
      _ref$rehypePlugins = _ref.rehypePlugins,
      rehypePlugins = _ref$rehypePlugins === void 0 ? [] : _ref$rehypePlugins;

  return unified().use(remarkParse, remarkParseOptions).use(remarkPlugins).use(remarkToRehype, remarkToRehypeOptions).use(rehypePlugins).use(rehypeReact, _extends({
    createElement: createElement,
    Fragment: Fragment
  }, rehypeReactOptions)).processSync(source).result;
};
var useRemark = function useRemark(_temp2) {
  var _ref2 = _temp2 === void 0 ? {} : _temp2,
      remarkParseOptions = _ref2.remarkParseOptions,
      remarkToRehypeOptions = _ref2.remarkToRehypeOptions,
      rehypeReactOptions = _ref2.rehypeReactOptions,
      _ref2$remarkPlugins = _ref2.remarkPlugins,
      remarkPlugins = _ref2$remarkPlugins === void 0 ? [] : _ref2$remarkPlugins,
      _ref2$rehypePlugins = _ref2.rehypePlugins,
      rehypePlugins = _ref2$rehypePlugins === void 0 ? [] : _ref2$rehypePlugins,
      _ref2$onError = _ref2.onError,
      onError = _ref2$onError === void 0 ? function () {} : _ref2$onError;

  var _useState = useState(null),
      reactContent = _useState[0],
      setReactContent = _useState[1];

  var setMarkdownSource = useCallback(function (source) {
    unified().use(remarkParse, remarkParseOptions).use(remarkPlugins).use(remarkToRehype, remarkToRehypeOptions).use(rehypePlugins).use(rehypeReact, _extends({
      createElement: createElement,
      Fragment: Fragment
    }, rehypeReactOptions)).process(source).then(function (vfile) {
      return setReactContent(vfile.result);
    })["catch"](onError);
  }, []);
  return [reactContent, setMarkdownSource];
};
var Remark = function Remark(_ref3) {
  var children = _ref3.children,
      useRemarkOptions = _objectWithoutPropertiesLoose(_ref3, _excluded);

  var _useRemark = useRemark(useRemarkOptions),
      reactContent = _useRemark[0],
      setMarkdownSource = _useRemark[1];

  useEffect(function () {
    setMarkdownSource(children);
  }, [children, setMarkdownSource]);
  return reactContent;
};

export { Remark, useRemark, useRemarkSync };
//# sourceMappingURL=react-remark.esm.js.map
