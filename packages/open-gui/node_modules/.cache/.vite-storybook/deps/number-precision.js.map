{
  "version": 3,
  "sources": ["../../../number-precision/build/index.es.js"],
  "sourcesContent": ["/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n *\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\r\n/**\r\n * Correct the given number to specifying significant digits.\r\n *\r\n * @param num The input number\r\n * @param precision An integer specifying the number of significant digits\r\n *\r\n * @example strip(0.09999999999999998) === 0.1 // true\r\n */\r\nfunction strip(num, precision) {\r\n    if (precision === void 0) { precision = 15; }\r\n    return +parseFloat(Number(num).toPrecision(precision));\r\n}\r\n/**\r\n * Return digits length of a number.\r\n *\r\n * @param num The input number\r\n */\r\nfunction digitLength(num) {\r\n    // Get digit length of e\r\n    var eSplit = num.toString().split(/[eE]/);\r\n    var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n    return len > 0 ? len : 0;\r\n}\r\n/**\r\n * Convert the given number to integer, support scientific notation.\r\n * The number will be scale up if it is decimal.\r\n *\r\n * @param num The input number\r\n */\r\nfunction float2Fixed(num) {\r\n    if (num.toString().indexOf('e') === -1) {\r\n        return Number(num.toString().replace('.', ''));\r\n    }\r\n    var dLen = digitLength(num);\r\n    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\r\n}\r\n/**\r\n * Log a warning if the given number is out of bounds.\r\n *\r\n * @param num The input number\r\n */\r\nfunction checkBoundary(num) {\r\n    if (_boundaryCheckingState) {\r\n        if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n            console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Create an operation to support rest params.\r\n *\r\n * @param operation The original operation\r\n */\r\nfunction createOperation(operation) {\r\n    return function () {\r\n        var nums = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            nums[_i] = arguments[_i];\r\n        }\r\n        var first = nums[0], others = nums.slice(1);\r\n        return others.reduce(function (prev, next) { return operation(prev, next); }, first);\r\n    };\r\n}\r\n/**\r\n * Accurate multiplication.\r\n *\r\n * @param nums The numbers to multiply\r\n */\r\nvar times = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    var baseNum = digitLength(num1) + digitLength(num2);\r\n    var leftValue = num1Changed * num2Changed;\r\n    checkBoundary(leftValue);\r\n    return leftValue / Math.pow(10, baseNum);\r\n});\r\n/**\r\n * Accurate addition.\r\n *\r\n * @param nums The numbers to add\r\n */\r\nvar plus = createOperation(function (num1, num2) {\r\n    // 取最大的小数位\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    // 把小数都转为整数然后再计算\r\n    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate subtraction.\r\n *\r\n * @param nums The numbers to subtract\r\n */\r\nvar minus = createOperation(function (num1, num2) {\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate division.\r\n *\r\n * @param nums The numbers to divide\r\n */\r\nvar divide = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    checkBoundary(num1Changed);\r\n    checkBoundary(num2Changed);\r\n    // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\r\n    return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\r\n});\r\n/**\r\n * Accurate rounding method.\r\n *\r\n * @param num The number to round\r\n * @param decimal An integer specifying the decimal digits\r\n */\r\nfunction round(num, decimal) {\r\n    var base = Math.pow(10, decimal);\r\n    var result = divide(Math.round(Math.abs(times(num, base))), base);\r\n    if (num < 0 && result !== 0) {\r\n        result = times(result, -1);\r\n    }\r\n    return result;\r\n}\r\nvar _boundaryCheckingState = true;\r\n/**\r\n * Whether to check the bounds of number, default is enabled.\r\n *\r\n * @param flag The value to indicate whether is enabled\r\n */\r\nfunction enableBoundaryChecking(flag) {\r\n    if (flag === void 0) { flag = true; }\r\n    _boundaryCheckingState = flag;\r\n}\r\nvar index = {\r\n    strip: strip,\r\n    plus: plus,\r\n    minus: minus,\r\n    times: times,\r\n    divide: divide,\r\n    round: round,\r\n    digitLength: digitLength,\r\n    float2Fixed: float2Fixed,\r\n    enableBoundaryChecking: enableBoundaryChecking,\r\n};\n\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;\n"],
  "mappings": "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",
  "names": []
}
