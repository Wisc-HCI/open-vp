{"version":3,"file":"react-remark.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  FunctionComponent,\n  Fragment,\n  ReactElement,\n  createElement,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport unified, { PluggableList } from 'unified';\nimport remarkParse, { RemarkParseOptions } from 'remark-parse';\nimport { Options as RemarkRehypeOptions } from 'mdast-util-to-hast';\nimport remarkToRehype from 'remark-rehype';\nimport rehypeReact, { Options as RehypeReactOptions } from 'rehype-react';\n\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport interface UseRemarkSyncOptions {\n  remarkParseOptions?: RemarkParseOptions;\n  remarkToRehypeOptions?: RemarkRehypeOptions;\n  rehypeReactOptions?: PartialBy<\n    RehypeReactOptions<typeof createElement>,\n    'createElement'\n  >;\n  remarkPlugins?: PluggableList;\n  rehypePlugins?: PluggableList;\n}\n\nexport const useRemarkSync = (\n  source: string,\n  {\n    remarkParseOptions,\n    remarkToRehypeOptions,\n    rehypeReactOptions,\n    remarkPlugins = [],\n    rehypePlugins = [],\n  }: UseRemarkOptions = {}\n): ReactElement =>\n  unified()\n    .use(remarkParse, remarkParseOptions)\n    .use(remarkPlugins)\n    .use(remarkToRehype, remarkToRehypeOptions)\n    .use(rehypePlugins)\n    .use(rehypeReact, {\n      createElement,\n      Fragment,\n      ...rehypeReactOptions,\n    } as RehypeReactOptions<typeof createElement>)\n    .processSync(source).result as ReactElement;\n\nexport interface UseRemarkOptions extends UseRemarkSyncOptions {\n  onError?: (err: Error) => void;\n}\n\nexport const useRemark = ({\n  remarkParseOptions,\n  remarkToRehypeOptions,\n  rehypeReactOptions,\n  remarkPlugins = [],\n  rehypePlugins = [],\n  onError = () => {},\n}: UseRemarkOptions = {}): [ReactElement | null, (source: string) => void] => {\n  const [reactContent, setReactContent] = useState<ReactElement | null>(null);\n\n  const setMarkdownSource = useCallback((source: string) => {\n    unified()\n      .use(remarkParse, remarkParseOptions)\n      .use(remarkPlugins)\n      .use(remarkToRehype, remarkToRehypeOptions)\n      .use(rehypePlugins)\n      .use(rehypeReact, {\n        createElement,\n        Fragment,\n        ...rehypeReactOptions,\n      } as RehypeReactOptions<typeof createElement>)\n      .process(source)\n      .then((vfile) => setReactContent(vfile.result as ReactElement))\n      .catch(onError);\n  }, []);\n\n  return [reactContent, setMarkdownSource];\n};\n\nexport interface RemarkProps extends UseRemarkOptions {\n  children: string;\n}\n\nexport const Remark: FunctionComponent<RemarkProps> = ({\n  children,\n  ...useRemarkOptions\n}: RemarkProps) => {\n  const [reactContent, setMarkdownSource] = useRemark(useRemarkOptions);\n\n  useEffect(() => {\n    setMarkdownSource(children);\n  }, [children, setMarkdownSource]);\n\n  return reactContent;\n};\n"],"names":["useRemark","remarkParseOptions","remarkToRehypeOptions","rehypeReactOptions","remarkPlugins","rehypePlugins","onError","useState","setReactContent","useCallback","source","unified","use","remarkParse","remarkToRehype","rehypeReact","createElement","Fragment","process","then","vfile","result","children","useRemarkOptions","reactContent","setMarkdownSource","useEffect","processSync"],"mappings":"mfAsDaA,EAAY,6BAOH,KANpBC,IAAAA,mBACAC,IAAAA,sBACAC,IAAAA,uBACAC,cAAAA,aAAgB,SAChBC,cAAAA,aAAgB,SAChBC,QAAAA,aAAU,iBAE8BC,WAA8B,MAAjDC,aAkBd,MAhBmBC,eAAY,SAACC,GACrCC,IACGC,IAAIC,EAAaZ,GACjBW,IAAIR,GACJQ,IAAIE,EAAgBZ,GACpBU,IAAIP,GACJO,IAAIG,KACHC,cAAAA,gBACAC,SAAAA,YACGd,IAEJe,QAAQR,GACRS,MAAK,SAACC,UAAUZ,EAAgBY,EAAMC,iBAChCf,KACR,qBASiD,gBACpDgB,IAAAA,SACGC,4IAEuCvB,EAAUuB,GAA7CC,OAAcC,cAErBC,aAAU,WACRD,EAAkBH,KACjB,CAACA,EAAUG,IAEPD,6CArEoB,SAC3Bd,sBAOsB,KALpBT,IAAAA,mBACAC,IAAAA,sBACAC,IAAAA,uBACAC,cAAAA,aAAgB,SAChBC,cAAAA,aAAgB,YAGlBM,IACGC,IAAIC,EAAaZ,GACjBW,IAAIR,GACJQ,IAAIE,EAAgBZ,GACpBU,IAAIP,GACJO,IAAIG,KACHC,cAAAA,gBACAC,SAAAA,YACGd,IAEJwB,YAAYjB,GAAQW"}