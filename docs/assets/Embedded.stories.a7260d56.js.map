{"version":3,"file":"Embedded.stories.a7260d56.js","sources":["../../src/stories/Embedded.stories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Environment, useDefaultProgrammingStore } from \"../components\";\nimport useMeasure from \"react-use-measure\";\n// import { Input } from \"../components/Block/Utility\";\nimport basicConfig from \"./assets/basicConfig\";\nimport basicStarter from \"./assets/basicStarter\";\nimport { IconButton, Stack } from \"@mui/material\";\nimport { FiRotateCw } from \"react-icons/fi\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { oneDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: \"Embedded\",\n  component: Environment\n};\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template = args => {\n  const {\n    drawers,\n    objectTypes,\n    programData,\n    drawerWidth,\n    tabs,\n    activeTab,\n    ...otherArgs\n  } = args;\n  const [ref, bounds] = useMeasure();\n  useEffect(() => {\n    useDefaultProgrammingStore.setState({\n      programSpec: {\n        drawers,\n        objectTypes\n      },\n      programData,\n      tabs,\n      activeTab,\n      featuredDocs: {\n        \"2dfsessfs\": \"> [warn] There was an error!\"\n        // \"45535153s\":true\n      }\n    });\n  }, [programData, drawers, objectTypes]);\n  const parse = useDefaultProgrammingStore(state => state.parse);\n  const [parsed, setParsed] = useState(\"// Compile To View Parsed Code\");\n  // const onFile = useDefaultProgrammingStore(state=>state.programData);\n  // console.log(onFile)\n\n  return <div style={{\n    display: \"flex\",\n    height: \"100vh\",\n    flexDirection: \"row\",\n    backgroundColor: \"#333\"\n  }}>\n      <div style={{\n      width: 450,\n      backgroundColor: \"#111\"\n    }}>\n        <Stack justifyContent=\"space-between\" alignItems=\"center\" direction=\"row\" style={{\n        flex: 1,\n        backgroundColor: \"#333\",\n        color: \"white\",\n        fontFamily: \"Helvetica\",\n        padding: 20\n        // width:450\n      }}>\n          <span>Javascript Output</span>\n          <IconButton color=\"primary\" onClick={() => setParsed(parse(\"javascript\"))}>\n            <FiRotateCw />\n          </IconButton>\n        </Stack>\n        {/* <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Result\"\n          multiline\n          value={parsed}\n         /> */}\n        <SyntaxHighlighter language=\"javascript\" style={oneDark}>\n          {parsed}\n        </SyntaxHighlighter>\n        {/* <pre style={{overflow:'scroll',width:450,height:'100%',color:'#ddd'}}>\n          {parsed}\n         </pre> */}\n      </div>\n      <div ref={ref} style={{\n      flex: 1,\n      margin: 10\n    }}>\n        <Environment {...otherArgs} store={useDefaultProgrammingStore} height={bounds.height} width={bounds.width} drawerWidth={drawerWidth} />\n      </div>\n    </div>;\n};\nexport const Embedded = Template.bind({});\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nEmbedded.args = {\n  highlightColor: \"#ff00ff\",\n  drawerWidth: 235,\n  ...basicConfig,\n  ...basicStarter\n};\nEmbedded.parameters = {\n  ...Embedded.parameters,\n  storySource: {\n    source: \"args => {\\n  const {\\n    drawers,\\n    objectTypes,\\n    programData,\\n    drawerWidth,\\n    tabs,\\n    activeTab,\\n    ...otherArgs\\n  } = args;\\n  const [ref, bounds] = useMeasure();\\n  useEffect(() => {\\n    useDefaultProgrammingStore.setState({\\n      programSpec: {\\n        drawers,\\n        objectTypes\\n      },\\n      programData,\\n      tabs,\\n      activeTab,\\n      featuredDocs: {\\n        \\\"2dfsessfs\\\": \\\"> [warn] There was an error!\\\"\\n        // \\\"45535153s\\\":true\\n      }\\n    });\\n  }, [programData, drawers, objectTypes]);\\n  const parse = useDefaultProgrammingStore(state => state.parse);\\n  const [parsed, setParsed] = useState(\\\"// Compile To View Parsed Code\\\");\\n  // const onFile = useDefaultProgrammingStore(state=>state.programData);\\n  // console.log(onFile)\\n\\n  return <div style={{\\n    display: \\\"flex\\\",\\n    height: \\\"100vh\\\",\\n    flexDirection: \\\"row\\\",\\n    backgroundColor: \\\"#333\\\"\\n  }}>\\n      <div style={{\\n      width: 450,\\n      backgroundColor: \\\"#111\\\"\\n    }}>\\n        <Stack justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\" direction=\\\"row\\\" style={{\\n        flex: 1,\\n        backgroundColor: \\\"#333\\\",\\n        color: \\\"white\\\",\\n        fontFamily: \\\"Helvetica\\\",\\n        padding: 20\\n        // width:450\\n      }}>\\n          <span>Javascript Output</span>\\n          <IconButton color=\\\"primary\\\" onClick={() => setParsed(parse(\\\"javascript\\\"))}>\\n            <FiRotateCw />\\n          </IconButton>\\n        </Stack>\\n        {/* <TextField\\n          id=\\\"outlined-multiline-flexible\\\"\\n          label=\\\"Result\\\"\\n          multiline\\n          value={parsed}\\n         /> */}\\n        <SyntaxHighlighter language=\\\"javascript\\\" style={oneDark}>\\n          {parsed}\\n        </SyntaxHighlighter>\\n        {/* <pre style={{overflow:'scroll',width:450,height:'100%',color:'#ddd'}}>\\n          {parsed}\\n         </pre> */}\\n      </div>\\n      <div ref={ref} style={{\\n      flex: 1,\\n      margin: 10\\n    }}>\\n        <Environment {...otherArgs} store={useDefaultProgrammingStore} height={bounds.height} width={bounds.width} drawerWidth={drawerWidth} />\\n      </div>\\n    </div>;\\n}\",\n    ...Embedded.parameters?.storySource\n  }\n};"],"names":["Embedded_stories","title","component","Environment","Template","args","drawers","objectTypes","programData","drawerWidth","tabs","activeTab","otherArgs","ref","bounds","useMeasure","useEffect","useDefaultProgrammingStore","setState","programSpec","featuredDocs","parse","state","parsed","setParsed","useState","display","height","flexDirection","backgroundColor","_jsxs","width","Stack","flex","color","fontFamily","padding","_jsx","IconButton","FiRotateCw","SyntaxHighlighter","oneDark","margin","Embedded","bind","highlightColor","basicConfig","basicStarter","parameters","storySource","source"],"mappings":"uZAYA,MAAeA,EAAA,CACbC,MAAO,WACPC,UAAWC,CACb,EAGMC,EAAmBC,GAAA,CACjB,KAAA,CACJC,QAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,KAAAA,EACAC,UAAAA,KACGC,CACDP,EAAAA,EACE,CAACQ,EAAKC,CAAM,EAAIC,EAAY,EAClCC,EAAAA,QAAAA,UAAU,IAAM,CACdC,EAA2BC,SAAS,CAClCC,YAAa,CACXb,QAAAA,EACAC,YAAAA,CACF,EACAC,YAAAA,EACAE,KAAAA,EACAC,UAAAA,EACAS,aAAc,CACZ,YAAa,8BAEf,CAAA,CACD,CACA,EAAA,CAACZ,EAAaF,EAASC,CAAW,CAAC,EACtC,MAAMc,EAAQJ,EAAoCK,GAAAA,EAAMD,KAAK,EACvD,CAACE,EAAQC,CAAS,EAAIC,mBAAS,gCAAgC,EAIrE,SAAO,MAAA,CAAK,MAAO,CACjBC,QAAS,OACTC,OAAQ,QACRC,cAAe,MACfC,gBAAiB,MACnB,EAAE,SACE,CAAAC,EAAA,MAAA,CAAK,MAAO,CACZC,MAAO,IACPF,gBAAiB,MACnB,EAAE,SAAA,CACEC,EAACE,EAAK,CAAC,eAAe,gBAAgB,WAAW,SAAS,UAAU,MAAM,MAAO,CACjFC,KAAM,EACNJ,gBAAiB,OACjBK,MAAO,QACPC,WAAY,YACZC,QAAS,EAEX,EAAE,SACE,CAAAC,EAAA,OAAA,CAAA,SAAA,mBAAA,CAA8B,EAC9BA,EAACC,EAAU,CAAC,MAAM,UAAU,QAAS,IAAMd,EAAUH,EAAM,YAAY,CAAC,EAAE,SACxEgB,EAACE,EAAU,EAAA,CAAA,CACA,CAAA,CAAA,CACP,EAORF,EAACG,EAAiB,CAAC,SAAS,aAAa,MAAOC,EAAQ,SACrDlB,CAAAA,CACiB,CAAA,CAAA,CAAA,EAKtBc,EAAA,MAAA,CAAK,IAAAxB,EAAU,MAAO,CACtBoB,KAAM,EACNS,OAAQ,EACV,EAAE,WACGvC,EAAW,CAAA,GAAKS,EAAW,MAAOK,EAA4B,OAAQH,EAAOa,OAAQ,MAAOb,EAAOiB,MAAO,YAAAtB,CAAA,CAAyB,CAAA,CAChI,CAAA,CAAA,CACF,CACV,EACakC,EAAWvC,EAASwC,KAAK,EAAE,EAExCD,EAAStC,KAAO,CACdwC,eAAgB,UAChBpC,YAAa,IACb,GAAGqC,EACH,GAAGC,CACL,QACAJ,EAASK,WAAa,CACpB,GAAGL,EAASK,WACZC,YAAa,CACXC,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGP,EAAAA,EAASK,aAATL,YAAAA,EAAqBM,WAC1B,CACF"}