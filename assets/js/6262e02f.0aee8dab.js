"use strict";(self.webpackChunk_people_and_robots_open_vp_docs=self.webpackChunk_people_and_robots_open_vp_docs||[]).push([[4656],{50765:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var o=i(31085),n=i(71184);const s={sidebar_position:1},r="API Intro",a={id:"api/intro",title:"API Intro",description:"The API for OpenVPis built on Typescript, and as a specification, relies heavily on a nested configuration. The starting point is the ProgramSpec), which is a configuration for the entire program. It also uses a set of enum values mapping to strings (acccessible through the @peopleandrobots/core package) that provide a nice interface for specifying certain types of data structures.",source:"@site/docs/api/intro.md",sourceDirName:"api",slug:"/api/intro",permalink:"/open-vp/docs/api/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",next:{title:"Enums",permalink:"/open-vp/docs/category/enums"}},c={},p=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"api-intro",children:"API Intro"}),"\n",(0,o.jsxs)(t.p,{children:["The API for OpenVPis built on Typescript, and as a specification, relies heavily on a nested configuration. The starting point is the ",(0,o.jsx)(t.a,{href:"/docs/api/program-spec",children:"ProgramSpec"}),"), which is a configuration for the entire program. It also uses a set of ",(0,o.jsx)(t.a,{href:"/docs/category/enums/",children:"enum values"})," mapping to strings (acccessible through the ",(0,o.jsx)(t.code,{children:"@people_and_robots/core"})," package) that provide a nice interface for specifying certain types of data structures."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);