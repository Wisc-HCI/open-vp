"use strict";(self.webpackChunk_people_and_robots_open_vp_docs=self.webpackChunk_people_and_robots_open_vp_docs||[]).push([[3485],{1246:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var p=t(31085),a=t(71184);const s={},r="MetaType",i={id:"api/enums/meta-type",title:"MetaType",description:"",source:"@site/docs/api/enums/meta-type.md",sourceDirName:"api/enums",slug:"/api/enums/meta-type",permalink:"/open-vp/docs/api/enums/meta-type",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ExtraType",permalink:"/open-vp/docs/api/enums/extra-type"},next:{title:"PrimitiveType",permalink:"/open-vp/docs/api/enums/primitive-type"}},o={},c=[];function m(e){const n={code:"code",h1:"h1",pre:"pre",...(0,a.R)(),...e.components};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(n.h1,{id:"metatype",children:"MetaType"}),"\n",(0,p.jsx)(n.pre,{children:(0,p.jsx)(n.code,{className:"language-js",children:'enum MetaType {\n  ObjectInstance = "OBJECT-INSTANCE",\n  ObjectReference = "OBJECT-REFERENCE",\n  FunctionDeclaration = "FUNCTION-DECLARATION",\n  FunctionCall = "FUNCTION-CALL",\n  Argument = "ARGUMENT",\n  Connection = "CONNECTION",\n  Comment = "COMMENT",\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,p.jsx)(n,{...e,children:(0,p.jsx)(m,{...e})}):m(e)}}}]);